/**
 * 
 */
package com.info.sak.lookup.constant;

import org.apache.commons.lang3.StringUtils;

/**
 * @author moibrahim
 * @created Nov 25, 2015 - 5:53:21 PM
 */
public enum TransactionTypeLuEnum {

	TERMINATION("TERMINATION"), CERTIFICAT_OF_AFFITRMATION_DATE("CERTIFICAT_OF_AFFITRMATION_DATE"), MEETING_MINUTES("MEETING_MINUTES"), FOR_WHOMS_ITS_CONCERNS("FOR_WHOMS_ITS_CONCERNS"),
	SIGNING_RATIFICATION_OF_CERTIF_OF_AUTH_SIGNED_RECS("SIGNING_RATIFICATION_OF_CERTIF_OF_AUTH_SIGNED_RECS"), SIGNING_RATIFICATION_OF_PEACE_WAIVER_AGREEMENT("SIGNING_RATIFICATION_OF_PEACE_WAIVER_AGREEMENT"),
	AFFIRMATION_DATE_T("AFFIRMATION_DATE_T"), AGREEMENT("AGREEMENT"), SUPPLY("SUPPLY"), SUB_LEASE_AGREEMENT("SUB_LEASE_AGREEMENT"), SUB_LEASE_INDUSTRAIL_FACILITY("SUB_LEASE_INDUSTRAIL_FACILITY"),
	SUB_LEASE_CONTRACTOR("SUB_LEASE_CONTRACTOR"), CAR_RENT("CAR_RENT"), CONTRACTOR("CONTRACTOR") , MORTGAGE_COMPANY("MORTGAGE_COMPANY"), MORTGAGE_SHARE("MORTGAGE_SHARE"), MORTGAGE_STOCKS("MORTGAGE_STOCKS"),
	MORTGAGE_SHIP("MORTGAGE_SHIP"), MORTGAGE_FARM("MORTGAGE_FARM"), MORTGAGE_LAND("MORTGAGE_LAND"), MORTGAGE_MACHINE_EQUPIMENT("MORTGAGE_MACHINE_EQUPIMENT"), MORTGAGE_INDUSTRY_FACILITY("MORTGAGE_INDUSTRY_FACILITY"),
	MORTGAGE_FACTORY("MORTGAGE_FACTORY"),MORTGAGE_MECHANIZED_BOAT("MORTGAGE_MECHANIZED_BOAT") ,SALE_MECHANIZED_BOAT("SALE_MECHANIZED_BOAT"), SALE_SHARE("SALE_SHARE") , SALE_LAND("SALE_LAND") , SALE_STOCKS("SALE_STOCKS") , 
	SALE_SHIP("SALE_SHIP") , SALE_COMPANY("SALE_COMPANY") , SALE_FARM("SALE_FARM") , SALE_FACTORY("SALE_FACTORY") , 
	SALE_MACHINERY("SALE_MACHINERY") , SALE_INDUSTRIAL("SALE_INDUSTRIAL"), COMPANY_ESTABLISHMENT_CONTRACT("CONTRACT_ESTABLISHMENT"), MORTGAGE_COMMERCIAL_REGISTRATION("MORTGAGE_COMMERCIAL_REGISTRATION"), PUBLIC_INTEREST_INSTITUTIONS("PUBLIC_INTEREST_INSTITUTIONS"),
	POA_PARTIAL_TERMINATION("POA_PARTIAL_TERMINATION"), POA_TERMINATION("POA_TERMINATION"), POA_PARTIAL_STEPPED("POA_PARTIAL_STEPPED"), POA_CERTIFIED_LEGAL_AUTHORIZE("POA_CERTIFIED_LEGAL_AUTHORIZE");
	
	private String transctionTypeCode;
	
	 TransactionTypeLuEnum(String transctionTypeCode)
	{
		this.transctionTypeCode=transctionTypeCode;	
	}

	public static TransactionTypeLuEnum getByTransctionTypeCode(String transctionTypeCode)
	{
		if(StringUtils.isNoneBlank(transctionTypeCode))
		{
			for(TransactionTypeLuEnum transactionTypeLuEnum : TransactionTypeLuEnum.values())
			{
				if(transctionTypeCode.equals(transactionTypeLuEnum.getTransctionTypeCode()))
				{
					return transactionTypeLuEnum;
				}
			}
		}
		return null;
	}
	/**
	 * @return the transctionTypeCode
	 */
	public String getTransctionTypeCode() {
		return transctionTypeCode;
	}
	
	
}
